name: Check PR

on:
  pull_request:
    branches:
      - master
      - main

# Environment variables available to all jobs and steps in this workflow
env:
  GITHUB_SHA: ${{ github.sha }}

jobs:
  check-pr:
    name: Check PR
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          ./ci/install-dependencies.sh

      - name: Run tests
        run: |
          sh ./ci/test.sh
        env:
          EXAMPLE_SECRET_ENV_VAR: ${{ secrets.EXAMPLE_SECRET_GITHUB_VALUE }}

      - name: Auth with GCP
        id: auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER_LAB }}
          service_account: ${{ secrets.GCP_DEPLOY_SERVICE_ACCOUNT_LAB }}
          token_format: "access_token"

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          export_default_credentials: true

      - name: Get Build Secrets from GCP
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@v0
        with:
          secrets: |-
            SOME_SECRET_VALUE:pretamanger-web-lab/DISCO_AUTH_OKTA_CLIENT_ID

      - name: Setup GCP Auth LAB (for lighthouse reports)
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets._GITHUB_GCP_LIGHTHOUSE_BUCKET_KEY_LAB }}

      - uses: google-github-actions/setup-gcloud@v0

      - name: 'Set Lighthouse environment variables'
        run: |
          echo "PR_SHA=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
          echo "GCP_REGION='europe-west1'"              >> $GITHUB_ENV
          echo "GCP_PROJECT='pretamanger-web-lab'"      >> $GITHUB_ENV
          echo "LHCI_GITHUB_TOKEN=${{ secrets.LIGHTHOUSE_GITHUB_TOKEN }}" >> $GITHUB_ENV

          ##########################################
          ### Set this for your lighthouse tests ###
          echo "SERVICE_APPLICATION_NAME=hello-world-ui" >> $GITHUB_ENV
          ##########################################

      - name: Post Lighthouse Github status (pending)
        run: |
          ./ci/lighthouse-post-status.sh  pending  ${SERVICE_APPLICATION_NAME}

      - name: Run Lighthouse
        run: |
          npm install -g @lhci/cli
          lhci autorun
        env:
          SOME_SECRET_VALUE: ${{steps.secrets.outputs.SOME_SECRET_VALUE}}

      - name: Upload Lighthouse reports
        if: always()
        run: |
          ./ci/lighthouse-upload-report.sh  ${SERVICE_APPLICATION_NAME}

      - name: Post Lighthouse Github status (failure)
        if: failure()
        run: |
          ./ci/lighthouse-post-status.sh  failure  ${SERVICE_APPLICATION_NAME}

      - name: Post Lighthouse Github status (success)
        if: success()
        run: |
          ./ci/lighthouse-post-status.sh  success  ${SERVICE_APPLICATION_NAME}
